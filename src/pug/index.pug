extends /layouts/layout.pug

block preload 
  link(src='/js/index.min.js' type='modulepreload' as="script" fetchpriority="high")
  link(src='/js/esbuild.worker.mjs' type='modulepreload' as="script" fetchpriority="high")
  link(src='/js/esbuild.wasm' type='prefetch' fetchpriority="high")

  link(src='/js/codicon.ttf' type='preload' as="font" crossorigin)
  link(rel="stylesheet", href="/js/index.min.css")
  //- link(rel="stylesheet", href="/css/codicon.min.css")

  link(src='/js/typescript.worker.js' type='modulepreload')
  link(src='/js/editor.worker.js' type='modulepreload')
  link(src='/dprint-typescript-plugin.wasm' type='prefetch')

  link(src='/js/json.worker.js' type='modulepreload' fetchpriority="low")

block content
  .container
    header
      h1 bundlejs
      p 
        | a quick npm package size checker 

    .search-container
      .search
        i.icon search
        input#search-input(type="text" autocorrect="off" autocomplete="off" placeholder="Type a package name...")
        button.btn.clear.umami--click--search-clear-button
          i.icon clear

      .search-results-container

  .container
    blockquote.mb-2 
      | #[strong Changelog (July 8, 2023)]: #[a(href="https://blog.okikio.dev/mastering-the-art-of-esm-and-cjs-package-handling" rel="noopener") The subtle shift in bundlejs' behaviour with ESM & CJS]  
    blockquote(class="mb-1") ✨ WOOOH! ✨ The official #[a(href="https://twitter.com/jsbundle/status/1634455567321255936?s=20" rel="noopener") bundlejs API] is out, you can access it via #[a(href="https://deno.bundlejs.com") deno.bundlejs.com] and/or #[a(href="https://edge.bundlejs.com") edge.bundlejs.com]. The new API also comes with proper badges #[a(href="#badges" rel="noopener") #[img(src="https://deno.bundlejs.com/?q=spring-easing&badge" class="inline-block" alt="spring-easing'a badge")]]

  input(type="text" id="copy-input" tabindex="-1" aria-hidden="true")

  .container.editor-section(class="!max-w-screen-lg relative !pt-0 pb-12")
    mixin code-info(classValue="")
      .action-btns-overflow.flex.flex-grow(class=classValue)
        .flex-grow
        .action-btns.justify-end
          button.btn.build-btn.umami--click--bundle-build-button(type='button', disabled) Build
          button.btn.btn-permalink.share-btn.umami--click--bundle-share-button(type='button') Share
          .file-size-container(title="Original -> Compressed")
            .file-size Wait...
              

    .container.info-pane
      .tab-btns.flex.flex-nowrap
        .action-btns
          button.btn.tab-style.input-btn.active(type="button") Input
          button.btn.tab-style.output-btn.umami--click--output-tab(type="button") Output 
          //- .flex.flex-wrap.gap-2.editor-btn-container
          button.btn.tab-style.settings-btn.umami--click--config-tab(type='button' title="Setting Buttons") 
            //- Settings
            svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
              path(d='M12.012 2.25c.734.008 1.465.093 2.182.253a.75.75 0 0 1 .582.649l.17 1.527a1.384 1.384 0 0 0 1.927 1.116l1.401-.615a.75.75 0 0 1 .85.174 9.792 9.792 0 0 1 2.204 3.792.75.75 0 0 1-.271.825l-1.242.916a1.381 1.381 0 0 0 0 2.226l1.243.915a.75.75 0 0 1 .272.826 9.797 9.797 0 0 1-2.204 3.792.75.75 0 0 1-.848.175l-1.407-.617a1.38 1.38 0 0 0-1.926 1.114l-.169 1.526a.75.75 0 0 1-.572.647 9.518 9.518 0 0 1-4.406 0 .75.75 0 0 1-.572-.647l-.168-1.524a1.382 1.382 0 0 0-1.926-1.11l-1.406.616a.75.75 0 0 1-.849-.175 9.798 9.798 0 0 1-2.204-3.796.75.75 0 0 1 .272-.826l1.243-.916a1.38 1.38 0 0 0 0-2.226l-1.243-.914a.75.75 0 0 1-.271-.826 9.793 9.793 0 0 1 2.204-3.792.75.75 0 0 1 .85-.174l1.4.615a1.387 1.387 0 0 0 1.93-1.118l.17-1.526a.75.75 0 0 1 .583-.65c.717-.159 1.45-.243 2.201-.252Zm0 1.5a9.135 9.135 0 0 0-1.354.117l-.109.977A2.886 2.886 0 0 1 6.525 7.17l-.898-.394a8.293 8.293 0 0 0-1.348 2.317l.798.587a2.881 2.881 0 0 1 0 4.643l-.799.588c.32.842.776 1.626 1.348 2.322l.905-.397a2.882 2.882 0 0 1 4.017 2.318l.11.984c.889.15 1.798.15 2.687 0l.11-.984a2.881 2.881 0 0 1 4.018-2.322l.905.396a8.296 8.296 0 0 0 1.347-2.318l-.798-.588a2.881 2.881 0 0 1 0-4.643l.796-.587a8.293 8.293 0 0 0-1.348-2.317l-.896.393a2.884 2.884 0 0 1-4.023-2.324l-.11-.976a8.988 8.988 0 0 0-1.333-.117ZM12 8.25a3.75 3.75 0 1 1 0 7.5 3.75 3.75 0 0 1 0-7.5Zm0 1.5a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5Z')
      
      +code-info("lt-sm:hidden")

    .flex-wrapper
      mixin editor-btns
        .editor-btns(class="overflow-hidden pt-24")&attributes(attributes)
          .flex-1
          div.relative
            .flex.flex-wrap.gap-2.editor-btn-container
              button.icon-btn.hide-btns.umami--click--hide-editor-button(type="button" title="Hide Editor Buttons")
                svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                  path(d='M7.75 12a1.75 1.75 0 1 1-3.5 0 1.75 1.75 0 0 1 3.5 0ZM13.75 12a1.75 1.75 0 1 1-3.5 0 1.75 1.75 0 0 1 3.5 0ZM18 13.75a1.75 1.75 0 1 0 0-3.5 1.75 1.75 0 0 0 0 3.5Z')
              
              .fading-editor-btns.flex.gap-1(class="lt-sm:flex-wrap")
                button.icon-btn.clear-btn.umami--click--clear-editor-button(type="button" title="Clear code editor")
                  svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                    path(d='M12 1.75a3.25 3.25 0 0 1 3.245 3.066L15.25 5h5.25a.75.75 0 0 1 .102 1.493L20.5 6.5h-.796l-1.28 13.02a2.75 2.75 0 0 1-2.561 2.474l-.176.006H8.313a2.75 2.75 0 0 1-2.714-2.307l-.023-.174L4.295 6.5H3.5a.75.75 0 0 1-.743-.648L2.75 5.75a.75.75 0 0 1 .648-.743L3.5 5h5.25A3.25 3.25 0 0 1 12 1.75Zm6.197 4.75H5.802l1.267 12.872a1.25 1.25 0 0 0 1.117 1.122l.127.006h7.374c.6 0 1.109-.425 1.225-1.002l.02-.126L18.196 6.5ZM13.75 9.25a.75.75 0 0 1 .743.648L14.5 10v7a.75.75 0 0 1-1.493.102L13 17v-7a.75.75 0 0 1 .75-.75Zm-3.5 0a.75.75 0 0 1 .743.648L11 10v7a.75.75 0 0 1-1.493.102L9.5 17v-7a.75.75 0 0 1 .75-.75Zm1.75-6a1.75 1.75 0 0 0-1.744 1.606L10.25 5h3.5A1.75 1.75 0 0 0 12 3.25Z')
                button.icon-btn.prettier-btn.umami--click--format-editor-button(type="button" title="Format code using Prettier")
                  svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                    path(d='M5.75 2a.75.75 0 0 0-.75.75v11.5a2.25 2.25 0 0 0 2.25 2.25H9.5v3a2.5 2.5 0 1 0 5 0v-3h2.25A2.25 2.25 0 0 0 19 14.25V2.75a.75.75 0 0 0-.75-.75H5.75Zm.75 9V3.5h6v1.752a.75.75 0 1 0 1.5 0V3.5h1v2.751a.75.75 0 1 0 1.5 0V3.5h1V11h-11Zm0 3.25V12.5h11v1.75a.75.75 0 0 1-.75.75h-3a.75.75 0 0 0-.75.75v3.75a1 1 0 0 1-2 0v-3.75a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 1-.75-.75Z')
                button.icon-btn.reset-btn.umami--click--reset-editor-button(type="button" title="Reset code")
                  svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                    path(d='M12 4.5a7.5 7.5 0 1 1-7.419 6.392c.067-.454-.265-.892-.724-.892a.749.749 0 0 0-.752.623A9 9 0 1 0 6 5.292V4.25a.75.75 0 0 0-1.5 0v3c0 .414.336.75.75.75h3a.75.75 0 0 0 0-1.5H6.9a7.473 7.473 0 0 1 5.1-2Z')
                button.icon-btn.download-btn.umami--click--download-code-editor-button(type="button" title="Download code")
                  svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                    path(d='M18.25 20.5a.75.75 0 1 1 0 1.5l-13 .004a.75.75 0 1 1 0-1.5l13-.004ZM11.648 2.012l.102-.007a.75.75 0 0 1 .743.648l.007.102-.001 13.685 3.722-3.72a.75.75 0 0 1 .976-.073l.085.073a.75.75 0 0 1 .072.976l-.073.084-4.997 4.997a.75.75 0 0 1-.976.073l-.085-.073-5.003-4.996a.75.75 0 0 1 .976-1.134l.084.072 3.719 3.714L11 2.755a.75.75 0 0 1 .648-.743l.102-.007-.102.007Z', fill='currentColor')
                .copy-container
                  button.icon-btn.editor-info.opacity-0(tabindex="-1" aria-hidden="true") Copied!
                  button.icon-btn.copy-btn.umami--click--copy-editor-button(type="button" title="Copy code")
                    svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                      path(d='M5.503 4.627 5.5 6.75v10.504a3.25 3.25 0 0 0 3.25 3.25h8.616a2.251 2.251 0 0 1-2.122 1.5H8.75A4.75 4.75 0 0 1 4 17.254V6.75c0-.98.627-1.815 1.503-2.123ZM17.75 2A2.25 2.25 0 0 1 20 4.25v13a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-13A2.25 2.25 0 0 1 8.75 2h9Zm0 1.5h-9a.75.75 0 0 0-.75.75v13c0 .414.336.75.75.75h9a.75.75 0 0 0 .75-.75v-13a.75.75 0 0 0-.75-.75Z')
                button.icon-btn.code-wrap-btn.umami--click--codewrap-editor-button(type="button" title="Toggle code wrap")
                  svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                    path(d='M2.75 5a.75.75 0 0 0 0 1.5h18.5a.75.75 0 0 0 0-1.5H2.75ZM2.75 11.5a.75.75 0 0 0 0 1.5H19a2.5 2.5 0 0 1 0 5h-4.44l.72-.72a.75.75 0 1 0-1.06-1.06l-2 2a.75.75 0 0 0 0 1.06l2 2a.75.75 0 1 0 1.06-1.06l-.72-.72H19a4 4 0 0 0 0-8H2.75Z')
                    path(d='M2 18.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Z')
          block
      .app#input
              
        .editor-container
          .center-container
            .loading
          #editor
          +editor-btns 

      .drag-section.dynamic
        .drag-handle.umami--pointermove--code-seperator-drag-handle

      .app#console 
        pre.console.pt-0(class="leading-[0]")
          .console-btns
            p.tab-style.text-sm#console Console
            .flex-grow
            .action-btns-overflow
              .flex.flex-nowrap.action-btns.gap-1
                button.btn.console-to-top-btn(type="button" title="Scroll to Top" class="flex items-center justify-center border border-gray-300 dark:border-gray-600")
                  svg.icon(xmlns='http://www.w3.org/2000/svg', width='24', height='24', fill='none', viewbox='0 0 24 24')
                    path(d='M4.21 10.733a.75.75 0 0 0 1.086 1.034l5.954-6.251V20.25a.75.75 0 0 0 1.5 0V5.516l5.955 6.251a.75.75 0 0 0 1.086-1.034l-7.067-7.42a.995.995 0 0 0-.58-.3.754.754 0 0 0-.29.001.995.995 0 0 0-.578.3L4.21 10.733Z', fill='currentColor')
                button.btn.console-to-bottom-btn(type="button" title="Scroll to Bottom" class="flex items-center justify-center border border-gray-300 dark:border-gray-600")
                  svg.icon(xmlns='http://www.w3.org/2000/svg', width='24', height='24', fill='none', viewbox='0 0 24 24')
                    path(d='M19.79 13.267a.75.75 0 0 0-1.086-1.034l-5.954 6.251V3.75a.75.75 0 1 0-1.5 0v14.734l-5.955-6.251a.75.75 0 0 0-1.086 1.034l7.067 7.42c.16.168.366.268.58.3a.753.753 0 0 0 .29-.001.995.995 0 0 0 .578-.3l7.067-7.419Z', fill='currentColor')
                button.btn.fold-unfold-console-btn(type="button" title="Fold/Unfold Console Lines" class="flex items-center justify-center border border-gray-300 dark:border-gray-600")
                  svg.icon(xmlns='http://www.w3.org/2000/svg', width='24', height='24', fill='none' viewbox='0 0 24 24')
                    path(d='M13.22 6.781a.75.75 0 0 1-.073-.976l.073-.085 2.367-2.37a.77.77 0 0 1 .664-.35c.252 0 .475.109.611.276l.053.075 2.367 2.37.073.084a.75.75 0 0 1 .007.882l-.08.094-.084.073a.75.75 0 0 1-.883.007l-.094-.08L17 5.56v3.784l-.007.089c-.05.32-.363.567-.743.567s-.694-.247-.743-.567l-.007-.09V5.56l-1.22 1.221-.084.073a.75.75 0 0 1-.976-.073ZM13.223 17.219a.75.75 0 0 1 .976-.073l.084.073 1.22 1.221v-3.784c0-.362.336-.656.75-.656.38 0 .693.247.743.567l.007.09v3.783l1.221-1.221a.75.75 0 0 1 .977-.073l.084.073a.75.75 0 0 1 .073.976l-.073.084-2.367 2.37a.77.77 0 0 1-.664.351.77.77 0 0 1-.664-.35l-2.367-2.37a.75.75 0 0 1 0-1.061ZM6.25 3.992A2.25 2.25 0 0 0 4 6.242v11.5a2.25 2.25 0 0 0 2.25 2.25h4a.75.75 0 0 0 0-1.5h-4a.75.75 0 0 1-.75-.75v-11.5a.75.75 0 0 1 .75-.75h4a.75.75 0 0 0 0-1.5h-4Z', fill='currentColor')
                button.btn.clear-console-btn(type="button" title="Clear Console" class="flex items-center justify-center border border-gray-300 dark:border-gray-600")
                  svg.icon(xmlns='http://www.w3.org/2000/svg', width='24', height='24', fill='none', viewbox='0 0 24 24')
                    path(d='M12 1.75a3.25 3.25 0 0 1 3.245 3.066L15.25 5h5.25a.75.75 0 0 1 .102 1.493L20.5 6.5h-.796l-1.28 13.02a2.75 2.75 0 0 1-2.561 2.474l-.176.006H8.313a2.75 2.75 0 0 1-2.714-2.307l-.023-.174L4.295 6.5H3.5a.75.75 0 0 1-.743-.648L2.75 5.75a.75.75 0 0 1 .648-.743L3.5 5h5.25A3.25 3.25 0 0 1 12 1.75Zm6.197 4.75H5.802l1.267 12.872a1.25 1.25 0 0 0 1.117 1.122l.127.006h7.374c.6 0 1.109-.425 1.225-1.002l.02-.126L18.196 6.5ZM13.75 9.25a.75.75 0 0 1 .743.648L14.5 10v7a.75.75 0 0 1-1.493.102L13 17v-7a.75.75 0 0 1 .75-.75Zm-3.5 0a.75.75 0 0 1 .743.648L11 10v7a.75.75 0 0 1-1.493.102L9.5 17v-7a.75.75 0 0 1 .75-.75Zm1.75-6a1.75 1.75 0 0 0-1.744 1.606L10.25 5h3.5A1.75 1.75 0 0 0 12 3.25Z', fill='currentColor')

          code.p-2(class="leading-normal min-h-10 no-highlight")
            .py-3
              .content
                p.px-4.hljs-literal No logs...
    
    .drag-section.vertical#handle-2
      .drag-handle.umami--pointermove--code-height-drag-handle

    .info-pane(class="!pt-0")
      +code-info("sm:hidden")

    br
    
    details#analysis.accordian.umami--toggle--analysis-accordian(class="bg-white border border-gray-300 dark:bg-elevated dark:border-gray-700").rounded-md
      summary
        p.px-4.py-2.cursor-pointer.select-none Analysis
      div.content.pl-4.pr-2.py-4
        p
          :markdown-it(linkify langPrefix='language-')
            Enable the `analysis` config to view the size of output files with interactive zoomable charts.
            ```ts
            {
              "analysis": "treemap" | "network" | "sunburst" | true | false,
              "esbuild": { ... }
            }
            ```
        br
        .relative.w-full
          .analyzer-loader
            .text-center
              p.loader-content Nothing to analyze...
              .loading.hidden
          iframe#analyzer(src="about:blank" allowtransparency="true")
          .drag-section.vertical#handle-3
            .drag-handle.umami--pointermove--analysis-drag-handle

  br

  mixin divider
    .px.py-3
      .w-full.h-0(class="border-b border-gray-300 dark:border-gray-700")

  .container 
    blockquote.mb-2 📑 Official #[a(href="https://blog.okikio.dev/documenting-an-online-bundler-bundlejs") Docs] for #[code bundlejs] are now available.
    blockquote  Special thanks to #[a(href="https://upstash.com") @upstash] for sponsoring the #[code bundlejs] API.

    div.flex.items-center.justify-center.flex-wrap.gap-2
      +product-hunt.place-content-center
      div
        a(href='https://opencollective.com/bundle/donate' target='_blank' rel="noopener")
          img(src='https://opencollective.com/bundle/donate/button@2x.png?color=blue' width='300' height='54')

    br
    details#usage.accordian.umami--toggle--usage-docs-accordian
      summary
        h3 Usage
      div.content.py-4
        p When bundling packages that also export CSS and other external files, #[strong bundlejs.com] now checks the gzip/brotli size of these external files, even though it won't output any code. Keep this in mind this isn't a bug, however, if it causes confusion I am willing to change this behaviour.
        br
        p Treeshaking is available, but not all CDNs support access to each packages package.json so there might be slight package version conflicts. The only verified CDN with access to the package.json is #[a(href="https://unpkg.com" target="_blank" rel="noopener") unpkg.com].
        br
        p Check the console for error messages and warnings.
        br
        p You can use custom protocols to specify which CDN the module should come from.
        br
        p
          ul.list-disc
            li esm.run:react   ->   #[a(href="https://esm.run/react" target="_blank" rel="noopener") https://esm.run/react] 
            //- br
            li esm.sh:react    ->   #[a(href="https://esm.sh/react" target="_blank" rel="noopener") https://esm.sh/react] 
            //- br
            li esm:react       ->   #[a(href="https://esm.sh/react" target="_blank" rel="noopener") https://esm.sh/react] 
            //- br
            li jsr:@oxi/result       ->   #[a(href="https://esm.sh/jsr/@oxi/result" target="_blank" rel="noopener") https://esm.sh/jsr/@oxi/result] 
            //- br
            li skypack:react   ->   #[a(href="https://cdn.skypack.dev/react" target="_blank" rel="noopener") https://cdn.skypack.dev/react] 
            //- br
            li unpkg:react     ->   #[a(href="https://unpkg.com/react" target="_blank" rel="noopener") https://unpkg.com/react] 
            //- br
            li deno:preact  ->   #[a(href="https://deno.land/x/preact" target="_blank" rel="noopener") https://deno.land/x/preact]  
            //- br
            li jsdelivr:react  ->   #[a(href="https://cdn.jsdelivr.net/npm/react" target="_blank" rel="noopener") https://cdn.jsdelivr.net/npm/react]  
            //- br
            li jsdelivr.gh:facebook/react/packages/react-dom/index.js  ->   #[a(href="https://cdn.jsdelivr.net/gh/facebook/react/packages/react-dom/index.js" target="_blank" rel="noopener") https://cdn.jsdelivr.net/gh/facebook/react/packages/react-dom/index.js] 
            //- br
            li github:facebook/react/main/packages/react/index.js  ->   #[a(href="https://raw.githubusercontent.com/facebook/react/main/packages/react/index.js" target="_blank" rel="noopener") https://raw.githubusercontent.com/facebook/react/main/packages/react/index.js] 
        br
        p e.g.
        :markdown-it(linkify langPrefix='language-')
          ```ts
          import { toStr } from "skypack:@okikio/animate";
          // or
          export * from "esm:@okikio/animate"; 
          // or 
          export { animate } from "https://cdn.skypack.dev/@okikio/animate";
          ```
        br
        p.relative
          span="* If an error occurs try using a different CDN, by default "
          strong bundle
          |  uses
          a(href="https://unpkg.com" target="_blank" rel="noopener")  unpkg.com
          |  but you can use the others.
        br
        p.relative
          span="* For some packages an error occurs where the default export is excluded from the treeshaken bundle, the solution for this is to manually include the default export like so,  "
          :markdown-it(linkify langPrefix='language-')
            ```ts
            export * from "solid-dismiss";
            // and
            export { default } from "solid-dismiss";
            ```

    +divider

    details.accordian#sharing.umami--toggle--sharing-docs-accordian
      summary
        h3 Sharing
      div.content.py-4
        p
          | You can now use search queries in #[strong bundle], all you need to do is add this to the url #[br]
          | #[code="?q={packages}&treeshake={methods to treeshake}"] #[br] #[br] 
          | e.g. #[br]
          | You want #[code react], #[code react-dom], #[code vue], and #[code @okikio/animate], but only want the #[code Animate] and #[code toStr] methods exported from #[code @okikio/animate].
          | #[br] #[br] You would add this to the url 
          a(href="/?q=react,react-dom,vue,@okikio/animate&treeshake=[*],[*],[*],[{Animate,toStr}]" rel="noopener")
            | ?q=react,react-dom,vue,@okikio/animate&treeshake=[*],[*],[*],[{Animate,toStr}]
          br 
          br
          | If you only want a couple packages and don't care to treeshake, then all you need is something like this,
          a(href="/?q=react,react-dom,vue,@okikio/animate" rel="noopener")
            | ?q=react,react-dom,vue,@okikio/animate
          | . There is another way to share a reproduciable bundle, the sharable link. Shareble links look like this #[a(href="/?share=PTAEGEBsEsGMGtQCUCuA7UAzA9gJ1AC4AWApqAELoAmkJVoA1KALLRrSbR2OgDiAXtAAOQ7kICGCcQHMyAZ2j8SAKBIAPIXgKgAVFlzYAtqABEAAWzxoV7MHHtD4giRMBuIA" rel="noopener") /?share=PTAEGEBs...] with the string value of the input code editor being compressed into a string and placed into the URL. 
          br
          br
          | In order to create a shareble link, you click the #[code Share] button, it copies the share url to your clipboard, and from there you can paste where you wish. 
          br
          br
          details.accordian(class="bg-white border border-gray-300 dark:bg-elevated dark:border-gray-700").rounded-md
            summary
              p.px-4.py-2.cursor-pointer.select-none Auto-bundling shared URL's
            div.content.pl-4.pr-2.py-4
              p If you would like to bundle your code when the share URL is loaded, add #[code bundle] to the url, e.g. #[a(href="/?q=@okikio/animate&bundle" rel="noopener") /?bundle&q=@okikio/animate] or #[a(href="/?bundle&share=PTAEGEBsEsGMGtQCUCuA7UAzA9gJ1AC4AWApqAELoAmkJVoA1KALLRrSbR2OgDiAXtAAOQ7kICGCcQHMyAZ2j8SAKBIAPIXgKgAVFlzYAtqABEAAWzxoV7MHHtD4giRMBuIA" rel="noopener") /?bundle&share=PTAEGEBs...]
    
    +divider

    details.accordian#externals.umami--toggle--externals-docs-accordian
      summary
        h3 Externals
      div.content.py-4
        p
          | Externals allow you to mark certain modules as modules to exclude from resolving, loading, and bundling, you use it the way you'd use the esbuild externals config option, e.g.
          
          :markdown-it(linkify langPrefix='language-')
            ```ts 
            {
              "esbuild": {
                "external": ["react", "react-dom"],
              }
            }
            ```
          br
          :markdown-it(linkify langPrefix='language-')
            > You can try it out below, [bundlejs.com/?config={"esbuild":{"external":["@okikio/animate"]}}](https://bundlejs.com/?config={"esbuild":{"external":["@okikio/animate"]}}).

            > Check out a complex example of using the external config [bundlejs.com/?q=@babel/core&config={"esbuild":{"external":[...]}}](https://bundlejs.com/?q=@babel/core&config={%22esbuild%22:{%22external%22:[%22debug%22,%22@babel/types%22,%22@babel/parser%22,%22@babel/generator%22,%22@babel/traverse%22,%22@babel/template%22,%22@babel/helper%22,%22semver%22,%22gensync%22,%22@babel/code-frame%22,%22json5%22,%22caniuse-lite%22,%22source-map%22,%22@ampproject/remapping%22,%22@babel/helper-compilation-targets%22,%22@babel/helper-validator-option%22,%22browserslist%22,%22@jridgewell/trace-mapping%22,%22convert-source-map%22,%22@babel/helpers%22,%22@babel/compat-data%22,%22@babel/helper-environment-visitor%22,%22@babel/helper-module-imports%22,%22@babel/helper-module-transforms%22,%22@babel/helper-validator-identifier%22,%22node-releases%22,%22@jridgewell/resolve-uri%22,%22@jridgewell/sourcemap-codec%22,%22electron-to-chromium%22]}})
          
    +divider

    details.accordian#aliases.umami--toggle--aliases-docs-accordian
      summary
        h3 Aliases
      div.content.py-4
        p
          | Aliases act as a redirect for modules, they are for replacing packages with different ones, e.g. replace #[code fs] with #[code memfs], so, it can work on the web, etc.. 
          br
          br
          | You use aliases like this
          
          :markdown-it(linkify langPrefix='language-')
            ```ts
            {
              "alias": {
                "@okikio/animate": "react-dom"
              }
            }
            ```
          br
          :markdown-it(linkify langPrefix='language-')
            > You can try out an example of using aliases, [bundlejs.com/?config={"alias":{"@okikio/animate":"react-dom"}}](https://bundlejs.com/?config={"alias":{"@okikio/animate":"react-dom"}}).

            > ⚠️ Warning: aliases currently don't care about the original packages version, e.g. `@okikio/animate@beta` will be redirected to `react-dom` regardless of the package version in use.
          
    +divider

    details.accordian#badges.umami--toggle--badges-docs-accordian
      summary
        h3 Badges
      div.content.py-4
        p
          | You can also add bundle badges, they look like this,
          br
          br
          div.space-x-2
            a(href="https://bundlejs.com/" class="inline-block") 
              img(src="/badge-light.svg", alt="Open Bundle" loading="lazy" width="150" height="40")
            a(href="https://bundlejs.com/" class="inline-block") 
              img(src="/badge-dark.svg", alt="Open Bundle" loading="lazy" width="150" height="40")
          br
          | All you need to do is to add this to your #[code README.md]
          br
          :markdown-it(linkify langPrefix='language-')
            ```md
            # Light Mode Badge 
            [![Open Bundle](https://bundlejs.com/badge-light.svg)](https://bundlejs.com/)

            # Dark Mode Badge 
            [![Open Bundle](https://bundlejs.com/badge-dark.svg)](https://bundlejs.com/)
            ```
          br
          div.inline-flex.flex-wrap(class="gap-1")
            span Another options is to use the API, e.g.
            :markdown-it(linkify langPrefix='language-')
              [![spring-easing's badge](https://deno.bundlejs.com/?q=spring-easing&badge=detailed&badge-style=for-the-badge)](https://bundlejs.com/?q=spring-easing)
            
          br

          :markdown-it(linkify langPrefix='language-')
            ```md
            [![spring-easing's badge](https://deno.bundlejs.com/?q=spring-easing&badge=detailed&badge-style=for-the-badge)](https://bundlejs.com/?q=spring-easing)
            ```
          br
          | You can use the #[a(href="#sharing") Sharing] section above and the 📑 Official #[a(href="https://blog.okikio.dev/documenting-an-online-bundler-bundlejs") Docs] to learn how to create unique bundles via badges.
  
    +divider
    
    //- details.accordian#discus.umami--toggle--discus-docs-accordian
    //-   summary
    //-     h3 Discus
    //-   div.content.py-4
    //-     //- src="https://giscus.app/client.js", data-repo="okikio/bundle", data-repo-id="MDEwOlJlcG9zaXRvcnkzNjE4NjgyNTM=", data-category="General", data-category-id="MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMyODg3MDcw", data-mapping="pathname", data-reactions-enabled="1", data-emit-metadata="0", data-input-position="bottom", data-theme="preferred_color_scheme", data-lang="en", data-loading="lazy", crossorigin="anonymous", 
    //-     script(
    //-       src="https://giscus.bundlejs.com/client.js"
    //-       data-repo="okikio/bundlejs"
    //-       data-repo-id="MDEwOlJlcG9zaXRvcnkzNjE4NjgyNTM="
    //-       data-mapping="number"
    //-       data-term="20"
    //-       data-reactions-enabled="1"
    //-       data-emit-metadata="0"
    //-       data-input-position="bottom"
    //-       data-theme="https://giscus.bundlejs.com/themes/custom_example.css"
    //-       data-lang="en"
    //-       data-loading="lazy"
    //-       crossorigin="anonymous"
    //-       defer
    //-       fetchpriority="low"
    //-     )
    //-   //- br  

    //- +divider
    
    details.accordian#community.umami--toggle--community-docs-accordian(open)
      summary
        h3 Community, Backers & Sponsors
      div.content.py-4
        ul(class="list-inside list-disc")
          li
            a(class="inline-flex" href="https://upstash.com/?utm_source=bundlejs&utm_medium=bundlejs&utm_campaign=bundlejs")
              div(class="flex gap-2")
                img(src="/sponsors/upstash.svg" alt="Vercel's Logo" class="inline-block" width="24" height="24")
                span @upstash
          li
            a(class="inline-flex" href="https://vercel.com/?utm_source=bundlejs&utm_medium=bundlejs&utm_campaign=bundlejs")
              div(class="flex gap-2")
                img(src="/sponsors/vercel.svg" alt="Vercel's Logo" class="inline-block" width="24" height="24" class="dark:invert")
                span @vercel
          li
            a(class="inline-flex" href="https://sheetjs.com/?utm_source=bundlejs&utm_medium=bundlejs&utm_campaign=bundlejs")
              div(class="flex gap-2")
                img(src="https://opencollective.com/bundle/organization/0/avatar.svg?avatarHeight=128" alt="Sheetjs's Logo" class="inline-block" width="24" height="24")
                span @sheetjs
          li
            a(class="inline-flex" href="https://opencollective.com/bundle/individual/0/website")
              div(class="flex gap-2")
                img(src="https://opencollective.com/bundle/individual/0/avatar.svg?avatarHeight=128" alt="Dani Guardiola's Logo" class="inline-block" width="24" height="24")
                span @daniguardio_la
          li And more, etc...

        //- script(src=`https://opencollective.com/bundle/banner.js` async fetchpriority="low")


    br
    blockquote Tweet at me on #[a(href="https://twitter.com/@jsbundle") @jsbundle] with what you love and what you think needs improvement in #[code bundlejs].
    blockquote #[strong Note] You can also use #[a(href="https://bundlesize.com") bundlesize.com] to access #[code bundlejs].
    br
    .text-center
      p(class="bg-white border border-gray-300 dark:bg-elevated dark:border-gray-700").inline-block.px-4.py-2.rounded-md
        //- href="https://analytics.bundlejs.com/share/T6ADiNQw/bundlejs" 
        a(href="https://bundlejs.com/" rel="noopener").umami--click--public-analytics-link
          span#visit-counter.inline-block 👋 00000 visits

block script 
  //- script(src='/js/index.min.js' type='module' async)

  
